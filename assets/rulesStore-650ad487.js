import{c as e,s as t}from"./index-4f8f8a56.js";const a=e((e,a)=>({rules:[],templates:[],evaluations:[],stats:{totalRules:0,activeRules:0,inactiveRules:0,rulesByType:{budget:0,category:0,quality:0},rulesByAction:{block:0,warn:0,prefer:0},averageWeight:0},loading:!1,error:null,loadRules:async r=>{e({loading:!0,error:null});try{const s=await t.getRules(r);e({rules:s,loading:!1}),a().updateStats()}catch(s){const t=s instanceof Error?s.message:"Failed to load rules";e({error:t,loading:!1}),console.error("Error loading rules:",s)}},loadTemplates:async()=>{e({loading:!0,error:null});try{const a=await t.getRuleTemplates();e({templates:a,loading:!1})}catch(a){const t=a instanceof Error?a.message:"Failed to load templates";e({error:t,loading:!1}),console.error("Error loading templates:",a)}},loadRule:async(a,r)=>{e({loading:!0,error:null});try{await t.getRule(a,r),e({loading:!1})}catch(s){const t=s instanceof Error?s.message:"Failed to load rule";e({error:t,loading:!1}),console.error("Error loading rule:",s)}},addRule:async r=>{e({loading:!0,error:null});try{const s="temp-user-id",o=await t.createRule(r,s);return e(e=>({rules:[o,...e.rules],loading:!1})),a().updateStats(),o}catch(s){const t=s instanceof Error?s.message:"Failed to add rule";throw e({error:t,loading:!1}),console.error("Error adding rule:",s),s}},updateRule:async(r,s)=>{e({loading:!0,error:null});try{const o="temp-user-id";await t.updateRule(r,s,o),e(e=>({rules:e.rules.map(e=>e.id===r?{...e,...s,updatedAt:new Date}:e),loading:!1})),a().updateStats()}catch(o){const t=o instanceof Error?o.message:"Failed to update rule";throw e({error:t,loading:!1}),console.error("Error updating rule:",o),o}},deleteRule:async r=>{e({loading:!0,error:null});try{const s="temp-user-id";await t.deleteRule(r,s),e(e=>({rules:e.rules.filter(e=>e.id!==r),loading:!1})),a().updateStats()}catch(s){const t=s instanceof Error?s.message:"Failed to delete rule";throw e({error:t,loading:!1}),console.error("Error deleting rule:",s),s}},toggleRuleStatus:async e=>{const t=a().rules.find(t=>t.id===e);t&&await a().updateRule(e,{status:"active"===t.status?"inactive":"active"})},duplicateRule:async e=>{const t=a().rules.find(t=>t.id===e);if(!t)throw new Error("Rule not found");return await a().addRule({...t,name:`${t.name} (kopia)`,status:"inactive"})},createRuleFromTemplate:async r=>{e({loading:!0,error:null});try{const s="temp-user-id",o=await t.createRuleFromTemplate(r,s);return e(e=>({rules:[o,...e.rules],loading:!1})),a().updateStats(),o}catch(s){const t=s instanceof Error?s.message:"Failed to create rule from template";throw e({error:t,loading:!1}),console.error("Error creating rule from template:",s),s}},getTemplatesByType:e=>a().templates.filter(t=>t.type===e),evaluateProducts:t=>{const r=[];for(const e of t){const t=a().evaluateProduct(e);r.push(t)}return e({evaluations:r}),a().updateStats(),r},evaluateProduct:e=>{const t=a().getActiveRules(),r=[],s=[],o=[],l=[];let n=0,i="ok";for(const d of t)try{const t=a().applyRule(d,e);null!==t&&(r.push({ruleId:d.id,ruleName:d.name,action:d.action,weight:d.weight,score:d.weight,reason:t.reason||"Reguła zastosowana",matched:!0}),"block"===d.action?(i="blocked",l.push(t.reason||"Produkt zablokowany"),n+=-2*d.weight):"warn"===d.action?("blocked"!==i&&(i="warning"),o.push(t.reason||"Ostrzeżenie"),n+=-1*d.weight):"prefer"===d.action&&(s.push(t.reason||"Rekomendacja"),n+=1*d.weight))}catch(c){console.warn(`Error applying rule ${d.id}:`,c)}const u=Math.max(0,Math.min(100,50+n));return{productId:e.id,score:u,status:i,appliedRules:r,recommendations:s,warnings:o,blocks:l}},updateStats:async()=>{const t=a().rules,r=a().evaluations,s={budget:0,category:0,quality:0},o={block:0,warn:0,prefer:0};t.forEach(e=>{s[e.type]=(s[e.type]||0)+1,o[e.action]=(o[e.action]||0)+1});const l=t.filter(e=>"active"===e.status),n=t.filter(e=>"inactive"===e.status),i=t.length>0?t.reduce((e,t)=>e+t.weight,0)/t.length:0,u={totalRules:t.length,activeRules:l.length,inactiveRules:n.length,rulesByType:s,rulesByAction:o,averageWeight:i,lastUsed:r.length>0?new Date:void 0};e({stats:u})},getStats:()=>a().stats,validateRule:e=>{const t={isValid:!0,errors:[],warnings:[],conflicts:[]};return e.name&&0!==e.name.trim().length||(t.isValid=!1,t.errors.push("Nazwa reguły jest wymagana")),e.type||(t.isValid=!1,t.errors.push("Typ reguły jest wymagany")),e.action||(t.isValid=!1,t.errors.push("Akcja reguły jest wymagana")),(void 0===e.weight||e.weight<1||e.weight>10)&&(t.isValid=!1,t.errors.push("Waga reguły musi być między 1 a 10")),e.conditions&&0!==Object.keys(e.conditions).length||(t.isValid=!1,t.errors.push("Warunki reguły są wymagane")),t},testRule:(e,t)=>{const r=a().rules.find(t=>t.id===e);if(!r)return{ruleId:e,testData:t,results:{passed:0,failed:0,total:0,details:[]}};const s=t.map(e=>{try{const t=a().applyRule(r,e);return{data:e,result:null!==t,reason:t?t.reason:"Reguła nie zastosowana"}}catch(t){return{data:e,result:!1,reason:t instanceof Error?t.message:"Unknown error"}}}),o=s.filter(e=>e.result).length,l=s.filter(e=>!e.result).length;return{ruleId:e,testData:t,results:{passed:o,failed:l,total:s.length,details:s}}},applyRule:(e,t)=>{switch(e.type){case"budget":const a=e.conditions;if(a.maxPrice&&t.price&&t.price>a.maxPrice)return{matched:!0,reason:`Cena ${t.price} przekracza limit ${a.maxPrice}`,action:e.action};break;case"category":const r=e.conditions;if(r.blacklist&&t.category&&r.blacklist.includes(t.category))return{matched:!0,reason:`Kategoria ${t.category} jest na czarnej liście`,action:e.action};if(r.whitelist&&t.category&&!r.whitelist.includes(t.category))return{matched:!0,reason:`Kategoria ${t.category} nie jest na białej liście`,action:e.action};break;case"quality":const s=e.conditions;if(s.keywords){const a=t.name.toLowerCase(),r=s.keywords.filter(e=>a.includes(e.toLowerCase()));if(r.length>0)return{matched:!0,reason:`Nazwa zawiera słowa kluczowe: ${r.join(", ")}`,action:e.action}}}return null},getRulesByType:e=>a().rules.filter(t=>t.type===e),getRulesByAction:e=>a().rules.filter(t=>t.action===e),getActiveRules:()=>a().rules.filter(e=>"active"===e.status),getInactiveRules:()=>a().rules.filter(e=>"inactive"===e.status),clearAllRules:()=>{e({rules:[]}),a().updateStats()},clearEvaluations:()=>{e({evaluations:[]}),a().updateStats()},clearError:()=>{e({error:null})}}));export{a as useRulesStore};
